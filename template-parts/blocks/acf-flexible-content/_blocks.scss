.block {
  @each $point, $size in $block-padding {
    @if $point == 'root' {
      padding-top: $size;
      padding-bottom: $size - $element-margin; // Negates for the last element in a block, rather than using :last-of-type
    }
    @else {
      @include above($point) {
        padding-top: $size;
        padding-bottom: $size - $element-margin; // Negates for the last element in a block, rather than using :last-of-type
      }
    }
  }
  position: relative;
}

.block-preamble {
  margin-bottom: $element-margin;
  .col *:last-child {
    margin-bottom: 0;
  }
}

// TODO: This needs some more work. Need to test full_width and different/same preceding before bg colour
// If two blocks follow with the same bg color, remove the top padding so that there is not a chasm of space
@each $name, $color in $background-colors {
  .block.bg-#{$name} {
    &:not(.block__full-width) { // Parent container not also full width
      &+& {
        padding-top: 0;  // Remove padding top if it follows a block with the same bg color
      }
    }
  }
}

.block__full-width {
  // Fixes issues of letterboxing
  padding-top: 0;
  padding-bottom: 0;
  img, .embed-container {
    margin-bottom: 0;
  }
  // Some full width blocks have headers or preambles - reinstate the top padding on these to open them back up and prevent crashing
  .block-title, .block-preamble {
    // TODO: Check how this works with bg-color crashing in
    @each $point, $size in $block-padding {
      @if $point == 'root' {
        margin-top: $size;
      }
      @else {
        @include above($point) {
          margin-top: $size;
        }
      }
    }
  }
  .block-title+.block-preamble {
    // If there is a header we don't want the top margin
    margin-top: 0 !important;
  }
}

.block-title {
  h2 {
    margin-bottom: 0;
  }
  margin-bottom: $block-title-bottom-margin;
}

.block .button-list {
  .button {
    @include below(sm) {
      width: 100%;
      margin-left: 0;
      margin-right: 0;
    }
  }
}
